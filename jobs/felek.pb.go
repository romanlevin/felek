// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: jobs/felek.proto

package jobs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JobStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"` // Path to executable
	Args []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"` // Represents argv, passed to the executable
}

func (x *JobStartRequest) Reset() {
	*x = JobStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_felek_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStartRequest) ProtoMessage() {}

func (x *JobStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_felek_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStartRequest.ProtoReflect.Descriptor instead.
func (*JobStartRequest) Descriptor() ([]byte, []int) {
	return file_jobs_felek_proto_rawDescGZIP(), []int{0}
}

func (x *JobStartRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *JobStartRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type LogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *JobID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`          // ID of the job whose logs we want to get
	Follow bool   `protobuf:"varint,2,opt,name=follow,proto3" json:"follow,omitempty"` // Keep streaming the logs as they come in
	Tail   bool   `protobuf:"varint,3,opt,name=tail,proto3" json:"tail,omitempty"`     // If `follow=true`, don't stream existing lines before following
}

func (x *LogsRequest) Reset() {
	*x = LogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_felek_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsRequest) ProtoMessage() {}

func (x *LogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_felek_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsRequest.ProtoReflect.Descriptor instead.
func (*LogsRequest) Descriptor() ([]byte, []int) {
	return file_jobs_felek_proto_rawDescGZIP(), []int{1}
}

func (x *LogsRequest) GetId() *JobID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *LogsRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

func (x *LogsRequest) GetTail() bool {
	if x != nil {
		return x.Tail
	}
	return false
}

type JobStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *JobID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // A unique ID
	// Types that are assignable to JobState:
	//
	//	*JobStatus_RunningJob
	//	*JobStatus_StoppedJob
	JobState isJobStatus_JobState `protobuf_oneof:"jobState"`
}

func (x *JobStatus) Reset() {
	*x = JobStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_felek_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatus) ProtoMessage() {}

func (x *JobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_felek_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatus.ProtoReflect.Descriptor instead.
func (*JobStatus) Descriptor() ([]byte, []int) {
	return file_jobs_felek_proto_rawDescGZIP(), []int{2}
}

func (x *JobStatus) GetId() *JobID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (m *JobStatus) GetJobState() isJobStatus_JobState {
	if m != nil {
		return m.JobState
	}
	return nil
}

func (x *JobStatus) GetRunningJob() *RunningJob {
	if x, ok := x.GetJobState().(*JobStatus_RunningJob); ok {
		return x.RunningJob
	}
	return nil
}

func (x *JobStatus) GetStoppedJob() *StoppedJob {
	if x, ok := x.GetJobState().(*JobStatus_StoppedJob); ok {
		return x.StoppedJob
	}
	return nil
}

type isJobStatus_JobState interface {
	isJobStatus_JobState()
}

type JobStatus_RunningJob struct {
	RunningJob *RunningJob `protobuf:"bytes,2,opt,name=runningJob,proto3,oneof"`
}

type JobStatus_StoppedJob struct {
	StoppedJob *StoppedJob `protobuf:"bytes,3,opt,name=stoppedJob,proto3,oneof"`
}

func (*JobStatus_RunningJob) isJobStatus_JobState() {}

func (*JobStatus_StoppedJob) isJobStatus_JobState() {}

type RunningJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"` // PID of the job's root process
}

func (x *RunningJob) Reset() {
	*x = RunningJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_felek_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunningJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningJob) ProtoMessage() {}

func (x *RunningJob) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_felek_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningJob.ProtoReflect.Descriptor instead.
func (*RunningJob) Descriptor() ([]byte, []int) {
	return file_jobs_felek_proto_rawDescGZIP(), []int{3}
}

func (x *RunningJob) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type StoppedJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Exit:
	//
	//	*StoppedJob_ExitCode
	//	*StoppedJob_ExitError
	Exit       isStoppedJob_Exit `protobuf_oneof:"exit"`
	SystemTime int64             `protobuf:"varint,3,opt,name=systemTime,proto3" json:"systemTime,omitempty"` // Elapsed system time, in nanoseconds
	UserTime   int64             `protobuf:"varint,4,opt,name=userTime,proto3" json:"userTime,omitempty"`     // Elapsed user time, in nanoseconds
	Stopped    bool              `protobuf:"varint,5,opt,name=stopped,proto3" json:"stopped,omitempty"`       // Was the job stopped by a user
}

func (x *StoppedJob) Reset() {
	*x = StoppedJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_felek_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoppedJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoppedJob) ProtoMessage() {}

func (x *StoppedJob) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_felek_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoppedJob.ProtoReflect.Descriptor instead.
func (*StoppedJob) Descriptor() ([]byte, []int) {
	return file_jobs_felek_proto_rawDescGZIP(), []int{4}
}

func (m *StoppedJob) GetExit() isStoppedJob_Exit {
	if m != nil {
		return m.Exit
	}
	return nil
}

func (x *StoppedJob) GetExitCode() int64 {
	if x, ok := x.GetExit().(*StoppedJob_ExitCode); ok {
		return x.ExitCode
	}
	return 0
}

func (x *StoppedJob) GetExitError() string {
	if x, ok := x.GetExit().(*StoppedJob_ExitError); ok {
		return x.ExitError
	}
	return ""
}

func (x *StoppedJob) GetSystemTime() int64 {
	if x != nil {
		return x.SystemTime
	}
	return 0
}

func (x *StoppedJob) GetUserTime() int64 {
	if x != nil {
		return x.UserTime
	}
	return 0
}

func (x *StoppedJob) GetStopped() bool {
	if x != nil {
		return x.Stopped
	}
	return false
}

type isStoppedJob_Exit interface {
	isStoppedJob_Exit()
}

type StoppedJob_ExitCode struct {
	ExitCode int64 `protobuf:"varint,1,opt,name=exitCode,proto3,oneof"` // The exit code of the job's process
}

type StoppedJob_ExitError struct {
	ExitError string `protobuf:"bytes,2,opt,name=exitError,proto3,oneof"` // The error string in case a job's processes was killed by a signal
}

func (*StoppedJob_ExitCode) isStoppedJob_Exit() {}

func (*StoppedJob_ExitError) isStoppedJob_Exit() {}

// A unique ID of a started job (a UUID string)
type JobID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *JobID) Reset() {
	*x = JobID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_felek_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobID) ProtoMessage() {}

func (x *JobID) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_felek_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobID.ProtoReflect.Descriptor instead.
func (*JobID) Descriptor() ([]byte, []int) {
	return file_jobs_felek_proto_rawDescGZIP(), []int{5}
}

func (x *JobID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Represents a single line of logs
type LogLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *LogLine) Reset() {
	*x = LogLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_felek_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLine) ProtoMessage() {}

func (x *LogLine) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_felek_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLine.ProtoReflect.Descriptor instead.
func (*LogLine) Descriptor() ([]byte, []int) {
	return file_jobs_felek_proto_rawDescGZIP(), []int{6}
}

func (x *LogLine) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_jobs_felek_proto protoreflect.FileDescriptor

var file_jobs_felek_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6a, 0x6f, 0x62, 0x73, 0x2f, 0x66, 0x65, 0x6c, 0x65, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x22, 0x39, 0x0a, 0x0f, 0x4a, 0x6f, 0x62, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x72, 0x67, 0x73, 0x22, 0x56, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x9c, 0x01, 0x0a, 0x09,
	0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x4a, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6a, 0x6f, 0x62,
	0x73, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x0a,
	0x72, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x12, 0x32, 0x0a, 0x0a, 0x73, 0x74,
	0x6f, 0x70, 0x70, 0x65, 0x64, 0x4a, 0x6f, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x4a, 0x6f, 0x62,
	0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x4a, 0x6f, 0x62, 0x42, 0x0a,
	0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x1e, 0x0a, 0x0a, 0x52, 0x75,
	0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x4a, 0x6f, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x0a, 0x53,
	0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x4a, 0x6f, 0x62, 0x12, 0x1c, 0x0a, 0x08, 0x65, 0x78, 0x69,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x65,
	0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x65, 0x78,
	0x69, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x42, 0x06, 0x0a,
	0x04, 0x65, 0x78, 0x69, 0x74, 0x22, 0x1d, 0x0a, 0x05, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0xe1, 0x01, 0x0a, 0x04, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x2f,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x15, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4a,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x24, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x0b, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4a,
	0x6f, 0x62, 0x49, 0x44, 0x1a, 0x0f, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0b, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x44, 0x1a, 0x0f, 0x2e, 0x6a,
	0x6f, 0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a,
	0x06, 0x53, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x11, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x6a, 0x6f, 0x62,
	0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x30, 0x01, 0x12, 0x2c, 0x0a, 0x06, 0x53,
	0x74, 0x64, 0x65, 0x72, 0x72, 0x12, 0x11, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4c, 0x6f, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e,
	0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x30, 0x01, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x6f, 0x6d, 0x61, 0x6e, 0x6c, 0x65, 0x76,
	0x69, 0x6e, 0x2f, 0x66, 0x65, 0x6c, 0x65, 0x6b, 0x2f, 0x6a, 0x6f, 0x62, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jobs_felek_proto_rawDescOnce sync.Once
	file_jobs_felek_proto_rawDescData = file_jobs_felek_proto_rawDesc
)

func file_jobs_felek_proto_rawDescGZIP() []byte {
	file_jobs_felek_proto_rawDescOnce.Do(func() {
		file_jobs_felek_proto_rawDescData = protoimpl.X.CompressGZIP(file_jobs_felek_proto_rawDescData)
	})
	return file_jobs_felek_proto_rawDescData
}

var file_jobs_felek_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_jobs_felek_proto_goTypes = []interface{}{
	(*JobStartRequest)(nil), // 0: jobs.JobStartRequest
	(*LogsRequest)(nil),     // 1: jobs.LogsRequest
	(*JobStatus)(nil),       // 2: jobs.JobStatus
	(*RunningJob)(nil),      // 3: jobs.RunningJob
	(*StoppedJob)(nil),      // 4: jobs.StoppedJob
	(*JobID)(nil),           // 5: jobs.JobID
	(*LogLine)(nil),         // 6: jobs.LogLine
}
var file_jobs_felek_proto_depIdxs = []int32{
	5, // 0: jobs.LogsRequest.id:type_name -> jobs.JobID
	5, // 1: jobs.JobStatus.id:type_name -> jobs.JobID
	3, // 2: jobs.JobStatus.runningJob:type_name -> jobs.RunningJob
	4, // 3: jobs.JobStatus.stoppedJob:type_name -> jobs.StoppedJob
	0, // 4: jobs.Jobs.Start:input_type -> jobs.JobStartRequest
	5, // 5: jobs.Jobs.Stop:input_type -> jobs.JobID
	5, // 6: jobs.Jobs.Status:input_type -> jobs.JobID
	1, // 7: jobs.Jobs.Stdout:input_type -> jobs.LogsRequest
	1, // 8: jobs.Jobs.Stderr:input_type -> jobs.LogsRequest
	2, // 9: jobs.Jobs.Start:output_type -> jobs.JobStatus
	2, // 10: jobs.Jobs.Stop:output_type -> jobs.JobStatus
	2, // 11: jobs.Jobs.Status:output_type -> jobs.JobStatus
	6, // 12: jobs.Jobs.Stdout:output_type -> jobs.LogLine
	6, // 13: jobs.Jobs.Stderr:output_type -> jobs.LogLine
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_jobs_felek_proto_init() }
func file_jobs_felek_proto_init() {
	if File_jobs_felek_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jobs_felek_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_felek_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_felek_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_felek_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunningJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_felek_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoppedJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_felek_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_felek_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_jobs_felek_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*JobStatus_RunningJob)(nil),
		(*JobStatus_StoppedJob)(nil),
	}
	file_jobs_felek_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*StoppedJob_ExitCode)(nil),
		(*StoppedJob_ExitError)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jobs_felek_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jobs_felek_proto_goTypes,
		DependencyIndexes: file_jobs_felek_proto_depIdxs,
		MessageInfos:      file_jobs_felek_proto_msgTypes,
	}.Build()
	File_jobs_felek_proto = out.File
	file_jobs_felek_proto_rawDesc = nil
	file_jobs_felek_proto_goTypes = nil
	file_jobs_felek_proto_depIdxs = nil
}
